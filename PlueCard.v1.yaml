openapi: 3.0.0
info:
  title: PlueCard
  version: '1.0'
  description: Documentação da interface de integração dos servidores REST da aplicação PlueCard
  contact:
    name: Leandro Ferreira
    url: 'https://github.com/leandrodaf'
    email: leandro.daf4@gmail.com
servers:
  - url: 'https://api.pluecard.com'
    description: Produção
  - url: 'http://localhost'
    description: Desenvolvimento
paths:
  /account/create:
    post:
      summary: Criação de usuário
      operationId: post-account-create
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Cria um usuário
      requestBody:
        content:
          application/json:
            schema:
              description: Schema do payload de integração
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  description: Nome do usuário
                email:
                  type: string
                  minLength: 1
                  description: Email do usuário
                accept_terms:
                  type: boolean
                  description: Validação dos termos de uso
                password:
                  type: string
                  minLength: 1
                  description: Senha do usuário
                password_confirmation:
                  type: string
                  minLength: 1
                  description: Confirmação da senha
                newsletter:
                  type: boolean
                  description: Confirmação do usuário para receber notificações de atualização da aplicação
                discount_coupons:
                  type: boolean
                  description: Confirmação do usuário para receber cupons de descontos
              required:
                - name
                - email
                - accept_terms
                - password
                - password_confirmation
                - newsletter
                - discount_coupons
            examples:
              Criação de usuário:
                value:
                  name: Igor Bruno Monteiro
                  email: foo@gmail.com
                  accept_terms: true
                  password: foo-bar-123456789
                  password_confirmation: foo-bar-123456789
                  newsletter: true
                  discount_coupons: true
        description: Criação de usuário
      security: []
      tags:
        - Conta de usuário
  /auth/login:
    post:
      summary: Autenticação de usuário
      operationId: post-auth-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Schema do response de autenticação
                type: object
                properties:
                  data:
                    type: object
                    description: Nó principal do retorno da API
                    required:
                      - accessToken
                      - tokenType
                      - expiresIn
                    properties:
                      accessToken:
                        type: string
                        minLength: 1
                        description: Token de acesso
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3RcL2F1dGhcL2xvZ2luIiwiaWF0IjoxNjExNTMzMTMxLCJleHAiOjE2MTE1MzY3MzEsIm5iZiI6MTYxMTUzMzEzMSwianRpIjoiVzNQQUhtdWl4MG9FeDhyYiIsInN1YiI6MjQsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.CvasSTZPqWRQr5cgm7jFiHho8RGnZIzQwJzAfjUql3A
                        readOnly: true
                      tokenType:
                        type: string
                        minLength: 1
                        description: Tipo do token
                        example: bearer
                        readOnly: true
                      expiresIn:
                        type: string
                        example: '2021-01-28T15:06:41.534407Z'
                        description: Tempo de vida do token
                        format: date-time
                        readOnly: true
                    readOnly: true
                required:
                  - data
              examples:
                Exemplo de retorno.:
                  value:
                    data:
                      accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3RcL2F1dGhcL2xvZ2luIiwiaWF0IjoxNjExNTMzMTMxLCJleHAiOjE2MTE1MzY3MzEsIm5iZiI6MTYxMTUzMzEzMSwianRpIjoiVzNQQUhtdWl4MG9FeDhyYiIsInN1YiI6MjQsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.CvasSTZPqWRQr5cgm7jFiHho8RGnZIzQwJzAfjUql3A
                      tokenType: bearer
                      expiresIn: '2021-01-28T15:06:41.534407Z'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Autentica um usuário
      requestBody:
        content:
          application/json:
            schema:
              description: Schema do payload de integração
              type: object
              properties:
                password:
                  type: string
                  minLength: 12
                  description: Senha do usuário
                email:
                  type: string
                  format: email
                  description: Email de autenticação do usuário
              required:
                - password
                - email
            examples:
              Autenticação do usuário:
                value:
                  email: foo@gmail.com
                  password: foo-bar-123456789
        description: Autenticação de usuário
      security: []
      tags:
        - Autenticação
      parameters: []
  /auth/refresh:
    post:
      summary: Atualização de token de autenticação
      operationId: post-auth-refresh
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Schema do response de atualização de autenticação
                type: object
                properties:
                  data:
                    type: object
                    description: Nó principal do retorno da API
                    required:
                      - accessToken
                      - tokenType
                      - expiresIn
                    properties:
                      accessToken:
                        type: string
                        minLength: 1
                        description: Token de acesso
                        readOnly: true
                      tokenType:
                        type: string
                        minLength: 1
                        description: Tipo do token
                        readOnly: true
                      expiresIn:
                        type: string
                        description: Tempo de vida do token
                        example: '2021-01-28T15:08:02.486877Z'
                        format: date-time
                        readOnly: true
                    readOnly: true
                required:
                  - data
              examples:
                Exemplo de retorno.:
                  value:
                    data:
                      accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3RcL2F1dGhcL3JlZnJlc2giLCJpYXQiOjE2MTE1MzAzNTcsImV4cCI6MTYxMTUzMzk3MiwibmJmIjoxNjExNTMwMzcyLCJqdGkiOiJ4YVpmMndXTUNjc2FEeXJ2Iiwic3ViIjoyNCwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.8xQIZSqTmvCOidroICz9UdX7RmiG7k5TPHgkOu0Q6xg
                      tokenType: bearer
                      expiresIn: '2021-01-28T15:29:24.017877Z'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Esse endpoint gera um novo token de acesso sem a necessidade de informar o nome de usuário e senha
      tags:
        - Autenticação
  /auth/logout:
    post:
      summary: Invalidar token de usuário
      operationId: post-auth-logout
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Faz o logout do usuário
      tags:
        - Autenticação
  /account/confirmation:
    post:
      summary: Confirmação de (E-mail / Conta)
      operationId: post-account-confirmation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - accessToken
                      - tokenType
                      - expiresIn
                    description: Nó principal do retorno da API
                    properties:
                      accessToken:
                        type: string
                        minLength: 1
                        description: Token de acesso
                        readOnly: true
                      tokenType:
                        type: string
                        minLength: 1
                        description: Tipo do token
                        readOnly: true
                      expiresIn:
                        type: string
                        minLength: 1
                        description: Tempo de vida do token
                        format: date-time
                        readOnly: true
                required:
                  - data
              examples:
                Conta confirmada com sucesso.:
                  value:
                    data:
                      accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvYXBpLnBsdWVjYXJkLmNvbVwvYWNjb3VudFwvY29uZmlybWF0aW9uIiwiaWF0IjoxNjExODQzMTgxLCJleHAiOjE2MTE4NDY3ODEsIm5iZiI6MTYxMTg0MzE4MSwianRpIjoiOWM4d0hXclZocElRcmpmOCIsInN1YiI6MTAsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.sKtfzqIB8JKKAh47wmWYT3a4aqXAoRMI_cEklsh4DVI
                      tokenType: bearer
                      expiresIn: '2021-01-28T15:13:01.152812Z'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Esse endpoint faz a validação da conta do usuário utilizando a hash que foi notificada no email do mesmo
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                hash:
                  type: string
                  minLength: 1
                  description: Hash recebida no e-mail do usuário
                  example: '5687618537'
                  writeOnly: true
              required:
                - hash
            examples:
              Exemplo De integração:
                value:
                  hash: '3502183397'
        description: Confirmação de email de usuário
      tags:
        - Conta de usuário
      security: []
  /account/confirmation/refresh:
    post:
      summary: Notificar token de confirmação de Email
      operationId: post-account-confirmation-refresh
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Esse endpoint renotifica o email do usuário com uma nova hash de confirmação de email
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                  format: email
                  description: E-mail do usuário
              required:
                - email
            examples:
              Exemplo de solicitação de nova hash:
                value:
                  email: foo@gmail.com
        description: ''
      tags:
        - Conta de usuário
      security: []
  /account/password/reset:
    post:
      summary: Solicitar reset de senha
      operationId: post-account-password-reset
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Esse endpoint notifica o email do usuário com uma hash para a troca de senha
      tags:
        - Conta de usuário
  /account/password:
    put:
      summary: Resetar senha do usuário
      operationId: put-account-password
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: 'Esse endpoint troca a senha do usuário, é necessário ter uma hash válida.'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                hash:
                  type: string
                  minLength: 1
                  description: Hash de troca de senha enviada no email do usuário
                  writeOnly: true
                password:
                  type: string
                  minLength: 1
                  description: Nova senha
                  writeOnly: true
                password_confirmation:
                  type: string
                  minLength: 1
                  description: Confirmação da senha
                  writeOnly: true
              required:
                - hash
                - password
                - password_confirmation
            examples:
              Exemplo de payload para troca de senha.:
                value:
                  hash: '9918219100'
                  password: '123456789900'
                  password_confirmation: '123456789900'
      tags:
        - Conta de usuário
  /users:
    get:
      summary: Lista todos os usuários do sistema
      tags:
        - Usuário
      parameters:
        - schema:
            type: string
            example: Cleiton Rasta
          in: query
          name: search
          description: Filtra os resultado pelo nome e email
        - schema:
            type: string
            enum:
              - rules
              - payments
              - transactions
              - payers
              - cards
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    description: Listagem de usuários
                    items:
                      $ref: '#/components/schemas/User'
                  meta:
                    $ref: '#/components/schemas/MetaPaginate'
              examples:
                Exemplo de retorno:
                  value:
                    data:
                      - id: 1
                        name: Igor Bruno Monteiro
                        email: iigorbrunomonteiro@acquire.com.br
                        accept_terms: true
                        newsletter: true
                        discount_coupons: true
                        confirmation_email: true
                        created_at: '2021-01-28T17:20:40.000000Z'
                        updated_at: '2021-01-28T21:25:53.000000Z'
                    meta:
                      pagination:
                        total: 0
                        count: 1
                        per_page: 15
                        current_page: 1
                        total_pages: 1
                        links: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-users
      description: Lista todos os usuários do sistema
    put:
      summary: Atualizar usuário autenticado
      operationId: put-users
      responses:
        '200':
          description: OK
      description: Atualização do usuário logado
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  description: Nome do usuário
                newsletter:
                  type: boolean
                  description: Confirmação do usuário para receber notificações de atualização da aplicação
                discount_coupons:
                  type: boolean
                  description: Confirmação do usuário para receber cupons de descontos
              required:
                - name
                - newsletter
                - discount_coupons
            examples:
              Exemplo de atualização:
                value:
                  name: Igor Bruno Monteiro
                  newsletter: true
                  discount_coupons: true
      tags:
        - Usuário
    delete:
      summary: Deletar usuário autenticado
      operationId: delete-users
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Deletar completamente do sistema o usuário autenticado
      tags:
        - Usuário
  '/users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Identificado do usuário
    get:
      summary: Retornar contexto de usuário específico
      tags:
        - Usuário - Administração
      parameters:
        - schema:
            type: string
            enum:
              - rules
              - payments
              - transactions
              - payers
              - cards
            example: cards
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
              examples:
                Exemplo de retorno:
                  value:
                    data:
                      id: 1
                      name: Igor Bruno Monteiro
                      email: iigorbrunomonteiro@acquire.com.br
                      accept_terms: true
                      newsletter: true
                      discount_coupons: true
                      confirmation_email: true
                      created_at: '2021-01-28T17:20:40.000000Z'
                      updated_at: '2021-01-28T21:25:53.000000Z'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-users-id
      description: Retorna o contexto de um usuário específico
    put:
      summary: Atualiza usuário específico
      operationId: put-users-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  name:
                    type: string
                    minLength: 1
                    description: Nome do usuário
                  newsletter:
                    type: boolean
                    description: Confirmação do usuário para receber notificações de atualização da aplicação
                  discount_coupons:
                    type: boolean
                    description: Confirmação do usuário para receber cupons de descontos
                required:
                  - name
                  - newsletter
                  - discount_coupons
              examples:
                Exemplo de atualização:
                  value:
                    name: Igor Bruno Monteiro
                    newsletter: true
                    discount_coupons: true
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Atualiza um usuário específico
      tags:
        - Usuário - Administração
    delete:
      summary: Deletar usuário específico
      operationId: delete-users-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      tags:
        - Usuário - Administração
      description: Deletar completamente do sistema um usuário específico
  /users/me:
    get:
      summary: Retorna o contexto do usuário logado
      operationId: get-users-me
      description: Retorna o contexto do usuário logado
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
              examples:
                Exemplo de retorno:
                  value:
                    data:
                      id: 1
                      name: Igor Bruno Monteiro
                      email: iigorbrunomonteiro@acquire.com.br
                      accept_terms: true
                      newsletter: true
                      discount_coupons: true
                      confirmation_email: true
                      created_at: '2021-01-28T17:20:40.000000Z'
                      updated_at: '2021-01-28T21:25:53.000000Z'
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      tags:
        - Usuário
      parameters:
        - schema:
            type: string
            enum:
              - rules
              - payments
              - transactions
              - payers
              - cards
            example: cards
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
  /account/password/forgot:
    post:
      summary: Solicitação de recuperação de senha
      operationId: post-account-password-forgot
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Envie uma hash para reset de senha no e-mail do usuário
      security: []
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                  description: E-mail do usuário
                  format: email
                  writeOnly: true
              required:
                - email
            examples:
              Exemplo de retorno.:
                value:
                  email: foo-user@mail.com
      tags:
        - Recuperação de senha
  /account/password/forgot/reset:
    put:
      summary: Confirmação da recuperação de senha
      operationId: put-account-password-forgot-reset
      responses:
        '200':
          description: OK
      security: []
      description: Realiza a troca de senha usando o token enviado no email do usuário
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: ''
              properties:
                hash:
                  type: string
                  minLength: 1
                  description: Hash de troca de senha enviada no email do usuário
                  writeOnly: true
                password:
                  type: string
                  minLength: 1
                  description: Nova senha do usuário
                password_confirmation:
                  type: string
                  minLength: 1
                  description: Confirmação da nova senha do usuário
              required:
                - hash
                - password
                - password_confirmation
              writeOnly: true
            examples:
              Exemplo de solicitação.:
                value:
                  hash: Hash-foo-bar
                  password: foo-password-12345
                  password_confirmation: foo-password-12345
      tags:
        - Recuperação de senha
  /cards/styles:
    get:
      summary: Listagem de Estilos de modelos
      tags:
        - Cartão - Administração
        - Estilos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Listagem de estilo de modelos
                    items:
                      $ref: '#/components/schemas/StyleCard'
                  meta:
                    $ref: '#/components/schemas/MetaPaginate'
              examples:
                Exemplo de retorno:
                  value:
                    data:
                      - id: 1
                        name: Paisagem
                        background: 'data:image/jpeg;base64,...'
                        created_at: '2021-01-28T18:11:23.000000Z'
                        updated_at: '2021-01-28T18:11:23.000000Z'
                        deleted_at: '2021-01-28T18:11:23.000000Z'
                    meta:
                      pagination:
                        total: 0
                        count: 0
                        per_page: 0
                        current_page: 0
                        total_pages: 0
                        links: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-models-styles
      description: Lista todos os modelos do sistema
      parameters:
        - $ref: '#/components/parameters/page'
        - schema:
            type: string
            enum:
              - models
            example: models
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
    post:
      summary: Criação de novo Estilos de modelos
      operationId: post-models-styles
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Criação de estilo de modelos
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  example: Escritório
                  description: Nome do estilo
                  writeOnly: true
                background:
                  type: string
                  minLength: 1
                  format: string
                  example: 'data:image/jpeg;base64,,...'
                  description: Imagem de fundo em formato base64
                  writeOnly: true
              required:
                - name
                - background
            examples:
              Exemplo de integração:
                value:
                  name: escritorio
                  background: 'data:image/jpeg;base64,,...'
        description: Para integrar é necessário informar o campo background com os valores de uma imagem válida. O sistema irá interpretar os bytes e então salvar em uma CDN
      tags:
        - Cartão - Administração
        - Estilos
    parameters: []
  '/cards/styles/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Identificado do estilo de modelo
    get:
      summary: Retornar estilo de modelo específico
      tags:
        - Cartão - Administração
        - Estilos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StyleCard'
              examples:
                Exemplo de retorno:
                  value:
                    data:
                      - id: 1
                        name: escritori 1o
                        background: /storage/cards/styles/background/791613507573.jpeg
                        created_at: '2021-02-16T20:32:53.000000Z'
                        updated_at: '2021-02-16T20:32:53.000000Z'
                        deleted_at: null
                    meta:
                      pagination:
                        total: 0
                        count: 1
                        per_page: 15
                        current_page: 1
                        total_pages: 1
                        links: {}
                Exemplo de retorno com inclusão da entidade models:
                  value:
                    data:
                      - id: 1
                        name: escritório 1o
                        background: /storage/cards/styles/background/791613507573.jpeg
                        created_at: '2021-02-16T20:32:53.000000Z'
                        updated_at: '2021-02-16T20:32:53.000000Z'
                        deleted_at: null
                        models:
                          data:
                            - id: 1
                              name: teste5
                              background: /storage/cards/models/background/241613587147.jpeg
                              created_at: '2021-02-17T18:39:08.000000Z'
                              updated_at: '2021-02-17T18:39:08.000000Z'
                              deleted_at: null
                    meta:
                      pagination:
                        total: 0
                        count: 1
                        per_page: 15
                        current_page: 1
                        total_pages: 1
                        links: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-models-styles-id
      description: Retorna um estilo de modelo específico
      parameters: []
    put:
      summary: Atualizar estilo de modelo específico
      operationId: put-models-styles
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Atualização de estilo de modelos
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nome do estilo
                  example: Plumas
                  minLength: 1
                  maxLength: 150
                  writeOnly: true
                background:
                  type: string
                  description: Imagem de fundo em formato base64
                  example: 'data:image/jpeg;base64,,...'
                  format: string
                  writeOnly: true
            examples:
              Exemplo de integração:
                value:
                  name: Plumas
                  background: 'data:image/jpeg;base64,...'
        description: Para integrar é necessário informar o campo background com os valores de uma imagem válida. O sistema irá interpretar os bytes e então salvar em uma CDN
      tags:
        - Cartão - Administração
        - Estilos
    delete:
      summary: Inativar estilo de modelo específico
      operationId: delete-models-styles-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Inativa o estilo de modelo
      tags:
        - Cartão - Administração
        - Estilos
  '/auth/login/social/{driver}':
    parameters:
      - schema:
          type: string
          example: google
        name: driver
        in: path
        required: true
        description: Driver social que está sendo integrado
    post:
      summary: Autenticação usando token social
      operationId: post-auth-login-social-driver
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Schema do response de autenticação
                type: object
                properties:
                  data:
                    type: object
                    description: Nó principal do retorno da API
                    required:
                      - accessToken
                      - tokenType
                      - expiresIn
                    properties:
                      accessToken:
                        type: string
                        minLength: 1
                        description: Token de acesso
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3RcL2F1dGhcL2xvZ2luIiwiaWF0IjoxNjExNTMzMTMxLCJleHAiOjE2MTE1MzY3MzEsIm5iZiI6MTYxMTUzMzEzMSwianRpIjoiVzNQQUhtdWl4MG9FeDhyYiIsInN1YiI6MjQsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.CvasSTZPqWRQr5cgm7jFiHho8RGnZIzQwJzAfjUql3A
                        readOnly: true
                      tokenType:
                        type: string
                        minLength: 1
                        description: Tipo do token
                        example: bearer
                        readOnly: true
                      expiresIn:
                        type: string
                        example: '2021-01-28T15:06:41.534407Z'
                        description: Tempo de vida do token
                        format: date-time
                        readOnly: true
                    readOnly: true
                required:
                  - data
              examples:
                Exemplo de retorno:
                  value:
                    data:
                      accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3RcL2F1dGhcL2xvZ2luIiwiaWF0IjoxNjExNTMzMTMxLCJleHAiOjE2MTE1MzY3MzEsIm5iZiI6MTYxMTUzMzEzMSwianRpIjoiVzNQQUhtdWl4MG9FeDhyYiIsInN1YiI6MjQsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.CvasSTZPqWRQr5cgm7jFiHho8RGnZIzQwJzAfjUql3A
                      tokenType: bearer
                      expiresIn: '2021-01-28T15:06:41.534407Z'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Fazer a autenticação usando os tokens sociais
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              Autenticação modelo Google:
                value:
                  token_type: Bearer
                  access_token: ya29.a0AfH6SMCz8aSk6KcR1hNENY_xGSbo1vIHpT-pgaZ9avg6MsByml0sSUs3WNkTbuUFOQWjOhfLt__Os5EiWnETt4vI85_7PKKL2b_wQWWQBdJ9LdtKAemrnJ7P6umT1zD2M5vEdea-zBKO7BNolVl8JYr3azSx3GlEX5olJXm2QVw
                  scope: 'email profile openid https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email'
                  login_hint: AJDLj6JUa8yxXrhHdWRHIV0S13cATs_fEsP0qZryg3SEy8EZfDsnYJfwSd5l6aTd4GcTM4RMOiXm3M39wcjZRG9ctd82IfQJHA
                  expires_in: 3599
                  id_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjAzYjJkMjJjMmZlY2Y4NzNlZDE5ZTViOGNmNzA0YWZiN2UyZWQ0YmUiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJhY2NvdW50cy5nb29nbGUuY29tIiwiYXpwIjoiOTg0NDQ2Mjg1ODUxLXAxOGo3aGlsZ3NjMXFocHYxOG1lNmUyNnMwNnBsYmhwLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiOTg0NDQ2Mjg1ODUxLXAxOGo3aGlsZ3NjMXFocHYxOG1lNmUyNnMwNnBsYmhwLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwic3ViIjoiMTE3NTA3MzYwOTkyNzA1NjAyMTgzIiwiZW1haWwiOiJsZWFuZHJvLmRhZjRAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImF0X2hhc2giOiJadnc4VmdUZEpicG8wVWtXeGxnYW53IiwibmFtZSI6IkxlYW5kcm8gRmVycmVpcmEiLCJwaWN0dXJlIjoiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pIalhZOHJudlJLaUdNelB5S2Q1aUJGQkdWN1Q5S2trUHllNTZRPXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6IkxlYW5kcm8iLCJmYW1pbHlfbmFtZSI6IkZlcnJlaXJhIiwibG9jYWxlIjoicHQtQlIiLCJpYXQiOjE2MTI0MTAwMjcsImV4cCI6MTYxMjQxMzYyNywianRpIjoiNjdkYzg4ZGE0NWU1OGQwZGRmNWM5ZTQ0ZGFhM2Q4NTRiNzllZjEzZCJ9.bfFEIwY3o_9Ms75oAlvWHRoDdeW5N6-OZbfPCPmY0UGWC_PdOfQkiEFN6f8n5j7F8twqqmqsgonZbGAUfdtsb65ptxH2zyKCX6NaggH2MqAqHIY65MyIK2flI-ZCXWmSbHJfGp1i4c8WtfWUvvzSqfJgyE9qmZGlD0avHKFkBUJEkwHRAmAvZ4fSP0TjS5psuHxNm54Uy1OESKHituXbnG9LYixB0vlEM1hEOYtCkSEoPd7oQpQksAEPS3y_oacVLMQZ4y-RHxze2tk2ft_nM8yLUojSm5LffspdrkLAgoZIpjDZhd2ng9xLTUitWg05ekn0gXUrwJx0kAdYYYAhig
                  session_state:
                    extraQueryParams:
                      authuser: '0'
        description: Os payload de integração sofrem variações conforme a rede social que está sendo integrada
      tags:
        - Autenticação
  /items:
    get:
      summary: Listagem de itens de pagamento
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      $ref: '#/components/schemas/Item'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/MetaPaginate'
              examples:
                Retorno de listagem paginado:
                  value:
                    data:
                      - title: Point Mini
                        description: Producto Point para cobros con tarjetas mediante bluetooth
                        picture_url: /storage/items/821612643073.jpeg
                        category_id: cards
                        unit_price: 58.8
                        created_at: '2021-02-06T20:24:33.000000Z'
                        updated_at: '2021-02-06T20:24:33.000000Z'
                        deleted_at: '2021-02-06T20:24:33.000000Z'
                    meta:
                      pagination:
                        pagination:
                          total: 0
                          count: 0
                          per_page: 0
                          current_page: 0
                          total_pages: 0
                          links: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-payments-items
      description: Listagem dos itens de payment item
      tags:
        - Itens
      parameters:
        - schema:
            type: string
            enum:
              - transactions
            example: transactions
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
        - $ref: '#/components/parameters/page'
    post:
      summary: Criação de item de pagamento
      operationId: post-payments-items
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Cria um novo item de pagamento
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                  description: Título do item
                description:
                  type: string
                  minLength: 1
                  description: Descrição do item
                picture_url:
                  type: string
                  minLength: 1
                  description: Imagem representativa em formato base64
                category_id:
                  type: string
                  minLength: 1
                  description: Categorização
                unit_price:
                  type: number
                  description: Preço unitário
              required:
                - title
                - description
                - picture_url
                - category_id
                - unit_price
            examples:
              Exemplo de criação de item:
                value:
                  title: Point Mini
                  description: Producto Point para cobros con tarjetas mediante bluetooth
                  picture_url: 'data:image/jpeg;base64,...'
                  category_id: cards
                  unit_price: 58.8
        description: ''
      tags:
        - Itens
  '/items/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Identificador do item
    get:
      summary: Retorna um Item de pagamento específico
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Item'
              examples:
                Exemplo de retorno:
                  value:
                    data:
                      title: Point Mini
                      description: Producto Point para cobros con tarjetas mediante bluetooth
                      picture_url: /storage/items/821612643073.jpeg
                      category_id: cards
                      unit_price: 58.8
                      created_at: '2021-02-06T20:24:33.000000Z'
                      updated_at: '2021-02-06T20:24:33.000000Z'
                      deleted_at: '2019-08-24T14:15:22Z'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-payments-items-id
      description: Retorna um item de pagamento específico
      tags:
        - Itens
      parameters:
        - schema:
            type: string
            enum:
              - transactions
            example: transactions
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
    put:
      summary: Atualiza um item de pagamento específico
      operationId: put-payments-items-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Atualiza um item de pagamento específico
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
            examples:
              example-1:
                value:
                  title: Point Mini 2
                  description: Producto Point para cobros con tarjetas mediante bluetooth
                  category_id: cards
                  unit_price: 100
        description: Exemplo de payload para atualizar um item de pagamento
      tags:
        - Itens
    delete:
      summary: Deletar um item de pagamento específico
      operationId: delete-payments-items-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Exemplo de delete
      tags:
        - Itens
  '/items/{id}/gateways/{gateways}':
    parameters:
      - schema:
          type: string
          enum:
            - mercado-pago
        name: gateways
        in: path
        required: true
        description: Identificador do meio de pagamento
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Identificador do item
    post:
      summary: Criação de pagamento
      operationId: post-payments-items-item_id-gateways-gateways
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  payer:
                    type: object
                    required:
                      - first_name
                      - last_name
                      - email
                      - identification
                      - address
                    description: Identificação do pagador
                    properties:
                      first_name:
                        type: string
                        minLength: 1
                        description: Primeiro Nome
                      last_name:
                        type: string
                        minLength: 1
                        description: Sobrenome
                      email:
                        type: string
                        minLength: 1
                        description: Email do pagador
                      identification:
                        type: object
                        required:
                          - type
                          - number
                        description: Identificação do documento
                        properties:
                          type:
                            type: string
                            minLength: 1
                            description: |
                              Tipo do documento
                            enum:
                              - CPF
                          number:
                            type: string
                            minLength: 1
                            description: Número do documento
                      address:
                        type: object
                        required:
                          - street_name
                          - street_number
                          - zip_code
                        description: Endereço do pagador
                        properties:
                          street_name:
                            type: string
                            minLength: 1
                            description: Nome da Rua/AV
                          street_number:
                            type: string
                            minLength: 1
                            description: Número da rua
                          zip_code:
                            type: string
                            minLength: 1
                            description: CEP
                  issuer_id:
                    type: string
                    minLength: 1
                    description: Criado através do SDK do Mercado Pago
                  installments:
                    type: string
                    minLength: 1
                    description: Quantidade de parcelas
                  payment_method_id:
                    type: string
                    minLength: 1
                    description: Identificador do método de pagamento
                  description:
                    type: string
                    description: Descrição do pagamento
                  token:
                    type: string
                    minLength: 1
                    description: Token de autenticação do SDK do Mercado Pago
                required:
                  - payer
                  - issuer_id
                  - installments
                  - payment_method_id
                  - token
              examples:
                Exemplo de integração:
                  value:
                    payer:
                      first_name: Raul
                      last_name: Alves
                      email: rraulkauealves@serteccontabil.com.br
                      identification:
                        type: CPF
                        number: '78730291828'
                      address:
                        street_name: Rua Santa Bernadete
                        street_number: '654'
                        zip_code: '09941300'
                    issuer_id: '24'
                    installments: '12'
                    payment_method_id: master
                    description: ''
                    token: 3b86a3259af5ece0d241b74a698e28e2
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Cria o pagamento de um item
      tags:
        - Pagamento
  /users/transactions:
    get:
      summary: Listagens de transações do usuário autenticado
      tags:
        - Pagamento
        - Usuário
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    description: Listagem de transações
                    items:
                      $ref: '#/components/schemas/Transaction'
                  meta:
                    $ref: '#/components/schemas/MetaPaginate'
              examples:
                Exemplo de retorno:
                  value:
                    data:
                      - id: 1
                        currency_id: BRL
                        amount: 58.8
                        quantity: 1
                        status: null
                        installments: 11
                        created_at: '2021-02-09T00:39:30.000000Z'
                        updated_at: '2021-02-09T00:39:30.000000Z'
                    meta:
                      pagination:
                        total: 0
                        count: 1
                        per_page: 15
                        current_page: 1
                        total_pages: 1
                        links: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-users-transactions
      description: Lista todas as transações feitas pelo usuário
      parameters:
        - schema:
            type: string
            enum:
              - user
              - item
              - payment
              - card
              - payer
            example: user
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
        - $ref: '#/components/parameters/page'
    parameters: []
  '/users/transactions/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Identificador único da transação
    get:
      summary: Retorna uma transação específica do usuário logado
      tags:
        - Pagamento
        - Usuário
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction'
                required:
                  - data
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-users-transactions-id
      description: Retorna uma transação específica do usuário logado
      parameters:
        - schema:
            type: string
            enum:
              - payer
              - user
              - item
              - payment
              - card
            example: payer
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
  '/users/{userId}/transactions/{id}':
    parameters:
      - schema:
          type: integer
          example: 1
        name: userId
        in: path
        required: true
        description: Identificador único do usuário
      - schema:
          type: integer
          example: 1
        name: id
        in: path
        required: true
        description: Identificador único da transação
    get:
      summary: Retorna uma transação específica de um usuário
      tags:
        - Pagamento
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction'
                required:
                  - data
              examples:
                Exemplo de retorno:
                  value:
                    data:
                      id: 1
                      currency_id: BRL
                      amount: 58.8
                      quantity: 1
                      status: null
                      installments: 11
                      created_at: '2021-02-09T00:39:30.000000Z'
                      updated_at: '2021-02-09T00:39:30.000000Z'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-users-userId-transactions-id
      description: Retorna uma transação específica com base no usuário fornecido
      parameters:
        - schema:
            type: string
            enum:
              - payer
              - user
              - item
              - payment
              - card
            example: payer
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
  '/users/{userId}/transactions':
    parameters:
      - schema:
          type: integer
          example: 1
        name: userId
        in: path
        description: Identificador único do usuário
        required: true
    get:
      summary: Listagens de transações do usuário especificado
      tags:
        - Pagamento
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      $ref: '#/components/schemas/Transaction'
                  meta:
                    $ref: '#/components/schemas/MetaPaginate'
                required:
                  - data
                  - meta
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-users-userId-transactions
      description: Lista todas as transações do usuário especificado
      parameters:
        - schema:
            type: string
            enum:
              - payer
              - user
              - item
              - payment
              - card
            example: user
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
        - $ref: '#/components/parameters/page'
  /cards/colors:
    get:
      summary: Listagem de cores
      tags:
        - Cartão - Administração
        - Cores
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    description: Listagem dos dados
                    items:
                      $ref: '#/components/schemas/ColorCard'
                  meta:
                    $ref: '#/components/schemas/MetaPaginate'
                required:
                  - data
                  - meta
              examples:
                Exemplo de retorno:
                  value:
                    data:
                      - id: 1
                        name: Escritório
                        matrix: 'rgba(248,249,250,1)'
                        created_at: '2021-02-16T20:32:43.000000Z'
                        updated_at: '2021-02-16T20:32:43.000000Z'
                        deleted_at: '2021-02-16T20:32:43.000000Z'
                    meta:
                      pagination:
                        total: 0
                        count: 2
                        per_page: 15
                        current_page: 1
                        total_pages: 1
                        links: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-cards-colors
      description: Lista todas as cores do sistema
      parameters:
        - schema:
            type: string
            enum:
              - models
            example: models
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
    post:
      summary: Criação de Cor de Cartão
      operationId: post-cards-colors
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  description: Nome da cor
                  example: Paz
                  writeOnly: true
                matrix:
                  type: string
                  minLength: 1
                  description: Hexadecimal color ou RGB(a)
                  example: '#FFFFFF'
                  writeOnly: true
              required:
                - name
                - matrix
            examples: {}
        description: ''
      description: Criação de cor de cartão
      tags:
        - Cartão - Administração
        - Cores
  '/cards/colors/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Identificação única da cor
    get:
      summary: Retorna uma cor
      tags:
        - Cores
        - Cartão - Administração
      operationId: get-cards-colors-id
      description: Retorna uma cor específica
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ColorCard'
              examples:
                Exemplo de retorno:
                  value:
                    data:
                      id: 2
                      name: escritório 11o
                      matrix: 'rgba(248,249,250,2)'
                      created_at: '2021-02-17T18:47:14.000000Z'
                      updated_at: '2021-02-17T18:47:14.000000Z'
                      deleted_at: '2021-02-17T18:47:14.000000Z'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    put:
      summary: Retorna uma cor específica
      operationId: put-cards-colors-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Atualiza uma cor específica
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  description: Nome da cor
                  example: Verão
                  writeOnly: true
                matrix:
                  type: string
                  minLength: 1
                  description: Hexadecimal color ou RGB(a)
                  example: '#FFFFFF'
                  writeOnly: true
              required:
                - name
                - matrix
            examples:
              Exemplo de integração:
                value:
                  name: escritório 1o
                  matrix: 'rgba(248,249,250,1)'
      tags:
        - Cores
        - Cartão - Administração
    delete:
      summary: Deletar cor específica
      operationId: delete-cards-colors-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Deleta uma cor específica
      tags:
        - Cores
        - Cartão - Administração
  /cards/models:
    get:
      summary: Listagem de modelos de cartão
      tags:
        - Cartão - Administração
        - Modelos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      $ref: '#/components/schemas/ModelCard'
                  meta:
                    $ref: '#/components/schemas/MetaPaginate'
                required:
                  - data
                  - meta
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-cards-models
      description: Listagem de modelos de cartão com filtragem por estilo
      parameters:
        - schema:
            type: string
            enum:
              - styles
              - body
              - bodys
              - colors
          in: query
          name: include
          description: Inclusão de entidades conforme os relacionamentos do modelo
    post:
      summary: Criação de modelos de cartão
      operationId: post-cards-models
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Cria um novo cartão
      tags:
        - Cartão - Administração
        - Modelos
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  description: Nome do modelo
                  example: Verão
                  writeOnly: true
                body:
                  type: string
                  minLength: 1
                  description: Código fonte do modelo
                  example: <html><head><title>Hello World</title></head><body>Hello World!</body></html>
                  writeOnly: true
                styles:
                  type: array
                  description: Relacionamento com o modelo de StyleCard
                  items:
                    type: integer
                    example: 1
                    writeOnly: true
                  writeOnly: true
                colors:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  description: Relacionamento com o modelo de ColorCard
                  items:
                    type: object
                    description: Lista de relacionamento com cores
                    properties:
                      id:
                        type: number
                        description: Id do ColorCard
                        example: 2
                        writeOnly: true
                      status:
                        type: string
                        minLength: 1
                        description: Tipo de relacionamento de cor
                        enum:
                          - PRIMARY
                          - SECONDARY
                          - CUSTOM
                        example: PRIMARY
                        writeOnly: true
                    required:
                      - id
                      - status
                    writeOnly: true
                background:
                  type: string
                  minLength: 1
                  description: Imagem base em base64 da imagem demonstrativa do modelo
                  example: 'data:image/jpeg;base64,..'
                  writeOnly: true
              required:
                - name
                - body
                - styles
                - colors
                - background
            examples:
              Exemplo de integração:
                value:
                  name: teste
                  body: <html><head><title>Hello World</title></head><body>Hello World!</body></html>
                  styles:
                    - 1
                  colors:
                    - id: 1
                      status: PRIMARY
                  background: 'data:image/jpeg;base64,..'
  '/cards/models/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Identificador único do modelo
    get:
      summary: Retorna um modelo específico
      tags:
        - Cartão - Administração
        - Modelos
      operationId: get-cards-models-id
      description: Retorna um modelo específico
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ModelCard'
                required:
                  - data
              examples:
                Exemplo de retorno com os relacionamentos:
                  value:
                    data:
                      id: 0
                      name: 'Força, Foco e Fé'
                      background: 'http://image.com/example.jpg'
                      created_at: '2021-02-17T18:39:08.000000Z'
                      updated_at: '2021-02-17T18:39:08.000000Z'
                      deleted_at: '2021-02-17T18:39:08.000000Z'
                      body:
                        data:
                          id: 1
                          data: <html><head><title>Hello World</title></head><body>Hello World!</body></html>
                          created_at: '2021-02-17T18:39:08.000000Z'
                          updated_at: '2021-02-17T18:39:08.000000Z'
                          deleted_at: '2021-02-17T18:39:08.000000Z'
                      colors:
                        data:
                          - id: 0
                            name: Verão
                            matrix: '#FFFFFF'
                            created_at: '2021-02-16T20:32:53.000000Z'
                            updated_at: '2021-02-16T20:32:53.000000Z'
                            deleted_at: '2021-02-16T20:32:53.000000Z'
                            models:
                              data:
                                - {}
                      styles:
                        data:
                          - id: 0
                            name: string
                            background: string
                            created_at: '2021-02-16T20:32:53.000000Z'
                            updated_at: '2021-02-16T20:32:53.000000Z'
                            deleted_at: '2021-02-16T20:32:53.000000Z'
                            models:
                              data:
                                - {}
                Exemplo de retorno:
                  value:
                    data:
                      id: 1
                      name: teste5
                      background: /storage/cards/models/background/241613587147.jpeg
                      created_at: '2021-02-17T18:39:08.000000Z'
                      updated_at: '2021-02-17T18:39:08.000000Z'
                      deleted_at: null
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    put:
      summary: Utiliza um modelo específico
      operationId: put-cards-models-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      tags:
        - Cartão - Administração
        - Modelos
      description: Atualização de modelo de cartão
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  description: Nome do modelo
                  example: Verão
                  writeOnly: true
                body:
                  type: string
                  minLength: 1
                  description: Código fonte do modelo
                  example: <html><head><title>Hello World</title></head><body>Hello World!</body></html>
                  writeOnly: true
                styles:
                  type: array
                  description: Relacionamento com o modelo de StyleCard
                  items:
                    type: integer
                    example: 1
                    writeOnly: true
                  writeOnly: true
                colors:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  description: Relacionamento com o modelo de ColorCard
                  items:
                    type: object
                    description: Lista de relacionamento com cores
                    properties:
                      id:
                        type: number
                        description: Id do ColorCard
                        example: 2
                        writeOnly: true
                      status:
                        type: string
                        minLength: 1
                        description: Tipo de relacionamento de cor
                        enum:
                          - PRIMARY
                          - SECONDARY
                          - CUSTOM
                        example: PRIMARY
                        writeOnly: true
                    required:
                      - id
                      - status
                    writeOnly: true
                background:
                  type: string
                  minLength: 1
                  description: Imagem base em base64 da imagem demonstrativa do modelo
                  example: 'data:image/jpeg;base64,..'
                  writeOnly: true
              required:
                - name
                - body
                - styles
                - colors
                - background
            examples:
              Exemplo de integração:
                value:
                  name: teste
                  body: <html><head><title>Hello World</title></head><body>Hello World!</body></html>
                  styles:
                    - 1
                  colors:
                    - id: 1
                      status: PRIMARY
                  background: 'data:image/jpeg;base64,..'
    delete:
      summary: Deleta um modelo específico
      operationId: delete-cards-models-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Deleta um modelo de cartão específico
      tags:
        - Cartão - Administração
        - Modelos
  '/nps/metrics/{metricId}':
    parameters:
      - schema:
          type: string
          enum:
            - DETRACTORS
            - LIABILITIES
            - PROMOTERS
          example: PROMOTERS
        name: metricId
        in: path
        required: true
        description: Métrica NPS
    get:
      summary: Relatórios de NPS
      tags:
        - NPS
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/NPSResult'
                required:
                  - data
              examples:
                Exemplo PROMOTERS:
                  value:
                    data:
                      metric: PROMOTERS
                      total: 4
                      entity: NOT_RELATION
                      entityId: 1
                Exemplo DETRACTORS:
                  value:
                    data:
                      metric: DETRACTORS
                      total: 1
                      entity: NOT_RELATION
                      entityId: 2
                Exemplo LIABILITIES:
                  value:
                    data:
                      metric: LIABILITIES
                      total: 20
                      entity: NOT_RELATION
                      entityId: 2
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-nps-metrics-metricId
      description: Realiza os cálculos de NPS
      parameters:
        - schema:
            type: string
            format: date-time
            example: '2021-02-01T00:00:00.000000Z'
          in: query
          name: startDate
          description: Data de início
        - schema:
            type: string
            format: date-time
            example: '2021-03-02T00:00:00.000000Z'
          in: query
          name: endDate
          description: Data final
        - schema:
            type: string
            example: NOT_RELATION
            default: NOT_RELATION
          in: query
          name: entity
          description: Nome da entidade relacionada
        - schema:
            type: integer
            example: 12
          in: query
          name: entityId
          description: Id único da entidade relacionada
  /nps:
    post:
      summary: Criação de métrica NPS
      operationId: post-nps
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      tags:
        - NPS
      description: Permite fazer a avaliação da aplicação ou entidade permitidas
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                rating:
                  type: number
                  description: Nota de avaliação
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    - 6
                    - 7
                    - 8
                    - 9
                    - 10
                  example: 9
                  writeOnly: true
                relationships:
                  type: string
                  minLength: 1
                  description: Relacionar entidade
                  default: NOT_RELATION
                  example: NOT_RELATION
                  writeOnly: true
                relationId:
                  type: number
                  description: Identificador único da entidade relacionada
                  example: 1
                  writeOnly: true
              required:
                - rating
                - relationships
                - relationId
            examples:
              Exemplo de integração:
                value:
                  rating: 10
                  relationships: NOT_RELATION
                  relationId: 1
components:
  schemas:
    User:
      description: |-
        Modelo do usuário

        Possíveis inclusões do modelo: `rules, payments, transactions, payers, cards`
      type: object
      x-examples:
        Exemplo de usuário:
          name: Igor Bruno Monteiro
          email: iigorbrunomonteiro@acquire.com.br
          accept_terms: true
          newsletter: true
          discount_coupons: true
          confirmation_email: true
          created_at: '2021-01-28T17:20:40.000000Z'
          updated_at: '2021-01-28T21:25:53.000000Z'
      title: User
      properties:
        name:
          type: string
          minLength: 1
          description: Nome do usuário
        email:
          type: string
          minLength: 1
          description: Email do usuário
          readOnly: true
        accept_terms:
          type: boolean
          description: Validação dos termos de uso
        newsletter:
          type: boolean
          description: Confirmação do usuário para receber notificações de atualização da aplicação
        discount_coupons:
          type: boolean
          description: Confirmação do usuário para receber cupons de descontos
        confirmation_email:
          type: boolean
          description: Confirmação do email do usuário
        created_at:
          type: string
          description: Data de criação
          example: '2021-02-16T20:32:53.000000Z'
          format: date-time
          readOnly: true
        updated_at:
          type: string
          description: Data da última atualização
          example: '2021-02-16T20:32:53.000000Z'
          format: date-time
          readOnly: true
        id:
          type: integer
          description: Identificador do usuário
          readOnly: true
        rules:
          type: object
          description: Listagem de regras de permissionamento do usuário
          properties:
            data:
              $ref: '#/components/schemas/Rule'
          readOnly: true
        payments:
          type: object
          description: Listagem de pagamentos
          properties:
            data:
              type: array
              description: Dados do relacionamento
              items:
                $ref: '#/components/schemas/Payment'
              readOnly: true
          readOnly: true
        transactions:
          description: Listagem de transações
          type: object
          properties:
            data:
              type: array
              description: Dados do relacionamento
              items:
                $ref: '#/components/schemas/Transaction'
              readOnly: true
          readOnly: true
        payers:
          description: Listagem de pagadores
          type: object
          properties:
            data:
              type: array
              description: Dados do relacionamento
              items:
                $ref: '#/components/schemas/Payer'
              readOnly: true
          readOnly: true
        cards:
          description: Listagem de cartões
          type: object
          properties:
            data:
              type: array
              description: Dados do relacionamento
              items:
                $ref: '#/components/schemas/Card'
              readOnly: true
          readOnly: true
    MetaPaginate:
      description: Metadados do modelo de paginação
      type: object
      title: Meta Paginate
      properties:
        pagination:
          type: object
          properties:
            total:
              type: number
              description: Total de páginas para integração
              deprecated: true
            count:
              type: number
              description: Quantidade de itens retornados
            per_page:
              type: number
              description: Quantidade por página
            current_page:
              type: number
              description: Página atual
            total_pages:
              type: number
              description: Quantidade de páginas iteradas
            links:
              type: object
              deprecated: true
              description: Link para a próxima iteração
    Rule:
      type: array
      description: Lista das regras de permissionamento
      items:
        type: string
        example: Administrator
      readOnly: true
      title: Rules
      x-examples:
        Exemplo de listagem de regras:
          - Administrator
      x-tags:
        - Usuário
    StyleCard:
      description: |-
        Estilo de modelos

        Possíveis inclusões do modelo: `models`
      type: object
      x-examples:
        'Exemplo ':
          id: 2
          name: escritorio
          background: 'https://s3.amazonaws.com/asset.api.pluecard.com//cards/styles/background/771612272026.png'
          created_at: '2021-02-02T13:20:27.000000Z'
          updated_at: '2021-02-02T13:20:27.000000Z'
          deleted_at: '2021-02-02T13:20:27.000000Z'
      title: StyleCard
      properties:
        id:
          type: number
          description: Identificador único do Estilo de modelo
          readOnly: true
        name:
          type: string
          minLength: 1
          description: Nome do modelo
        background:
          type: string
          minLength: 1
          description: URL da imagem de fundo do modelo
        created_at:
          type: string
          description: Data de criação
          format: date-time
          example: '2021-02-16T20:32:53.000000Z'
          readOnly: true
        updated_at:
          type: string
          description: Data da última atualização
          format: date-time
          example: '2021-02-16T20:32:53.000000Z'
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          description: Data de inativação do estilo de modelo
          example: '2021-02-16T20:32:53.000000Z'
          readOnly: true
        models:
          type: object
          description: Listagem de regras de modelos
          properties:
            data:
              type: array
              description: Listagem dos dados
              items:
                $ref: '#/components/schemas/ModelCard'
              readOnly: true
          readOnly: true
    Item:
      description: |-
        Modelo do Item

        Possíveis inclusões do modelo: `transactions`
      type: object
      title: Item
      properties:
        title:
          type: string
          minLength: 1
          description: Título do item
        description:
          type: string
          minLength: 1
          description: Descrição do item
        picture_url:
          type: string
          minLength: 1
          description: Imagem representativa em formato base64
        category_id:
          type: string
          minLength: 1
          description: Categorização
        unit_price:
          type: number
          description: Preço unitário
          example: 10.2
        created_at:
          type: string
          description: Data de criação
          format: date-time
          example: '2021-02-16T20:32:53.000000Z'
          readOnly: true
        updated_at:
          type: string
          description: Data da última atualização
          format: date-time
          example: '2021-02-16T20:32:53.000000Z'
          readOnly: true
        deleted_at:
          type: string
          description: Data de inativação
          format: date-time
          example: '2021-02-16T20:32:53.000000Z'
          readOnly: true
        transactions:
          type: object
          description: Transações relacionadas
          properties:
            data:
              type: array
              description: Dados do relacionamento
              items:
                $ref: '#/components/schemas/Transaction'
        id:
          type: integer
          description: Identificador único do item
    Payment:
      description: |-
        Modelo de Transação

        Possíveis inclusões do modelo: `user, transactions, card, payer`
      type: object
      title: Payment
      x-examples: {}
      properties:
        id:
          type: number
          description: Identificador da transação
        external_id:
          type: string
          minLength: 1
          description: Identificador externo
          example: '1233540725'
          readOnly: true
        operation_type:
          type: string
          minLength: 1
          description: Tipo de dados da operação
          example: regular_payment
        order:
          description: Ordem de compra relacionada
          type: object
        binary_mode:
          type: boolean
          description: 'Quando definido como true, o pagamento só pode ter os status approved ou rejected. Caso contrário, o status in_process é adicionado.'
        external_reference:
          type: string
          description: Referência que pode sincronizar com seu sistema de pagamentos
        status:
          type: string
          minLength: 1
          description: Status do pagamento
          example: approved
        status_detail:
          type: string
          minLength: 1
          description: Detalhes relacionados a status
          example: accredited
        date_created:
          type: string
          minLength: 1
          description: Data de criação
          format: date-time
          example: '2021-02-06T15:10:38.000000Z'
        last_modified: {}
        live_mode:
          type: boolean
        date_last_updated:
          type: string
          minLength: 1
          description: Data da última atualização
          format: date-time
          example: '2021-02-06T15:10:38.000000Z'
        date_of_expiration:
          type: string
          format: date-time
          example: '2021-02-06T15:10:38.000000Z'
          description: Data de expiração
        date_approved:
          type: string
          minLength: 1
          format: date-time
          example: '2021-02-06T15:10:38.000000Z'
          description: Data da aprovação
        money_release_date:
          type: string
          minLength: 1
          description: O valor é referente a cotação do dia
          format: date-time
          example: '2021-02-06T15:10:38.000000Z'
        currency_id:
          type: string
          minLength: 1
          description: Identificador de moeda em formato ISO 4217
          example: BRL
          enum:
            - BRL
            - AUD
            - USD
        transaction_amount:
          type: number
          description: Valor da transação
          example: 10.2
          format: float
        transaction_amount_refunded:
          type: number
          description: Valor de devolução
          example: 5.1
        collector_id:
          type: number
          description: Sua identificação como um vendedor no Mercado Pago
          example: 205648376
        payment_method_id:
          type: string
          minLength: 1
          description: Banco processador do pagamento
          example: master
        payment_type_id:
          type: string
          minLength: 1
          description: Tipo de pagamento
          example: credit_card
        transaction_details:
          type: object
          description: Detalhes da transação
          properties:
            overpaid_amount:
              type: number
              example: 0
            total_paid_amount:
              type: number
              example: 100
            acquirer_reference: {}
            installment_amount:
              type: number
              example: 100
            net_received_amount:
              type: number
              example: 95.01
            external_resource_url: {}
            financial_institution: {}
            payable_deferral_period: {}
            payment_method_reference_id: {}
        fee_details:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: object
            properties:
              type:
                type: string
                minLength: 1
                example: mercadopago_fee
              amount:
                type: number
                example: 4.99
              fee_payer:
                type: string
                minLength: 1
                example: collector
            required:
              - type
              - amount
              - fee_payer
        differential_pricing_id: {}
        application_fee: {}
        capture: {}
        captured:
          type: boolean
        call_for_authorize_id: {}
        statement_descriptor:
          type: string
          minLength: 1
          description: 'Como aparecerá o pagamento no extrato do cartão (ex: o MERCADOPAGO).'
        refunds: {}
        additional_info:
          type: object
          properties:
            nsu_processadora: {}
            available_balance: {}
        campaign_id: {}
        coupon_amount: {}
        installments:
          type: integer
          description: Quantidade de parcelas
          example: 12
        token:
          type: string
          minLength: 1
          description: Token autenticador da transação
          example: c36c372ad7196366a1cce8b92e8c8ce6
        description: {}
        notification_url: {}
        issuer_id:
          type: string
          minLength: 1
          example: '12'
        metadata: {}
        callback_url: {}
        coupon_code: {}
        created_at:
          type: string
          description: Data de criação
          format: date-time
          example: '2021-02-06T19:31:30.000000Z'
          readOnly: true
        updated_at:
          type: string
          description: Data da última atualização
          format: date-time
          example: '2021-02-06T19:31:30.000000Z'
          readOnly: true
        user:
          type: object
          description: Usuário vinculado ao pagamento
          properties:
            data:
              $ref: '#/components/schemas/User'
        transactions:
          type: object
          description: Transações relacionadas
          properties:
            data:
              description: Dados do relacionamento
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
        card:
          type: object
          description: Cartão utilizado no pagamento
          properties:
            data:
              $ref: '#/components/schemas/Card'
        payer:
          type: object
          description: Pagador responsável
          properties:
            data:
              $ref: '#/components/schemas/Payer'
    Transaction:
      description: |-
        Modelo de Transação

        Possíveis inclusões do modelo: `user, item, payment, card, payer`
      type: object
      title: Transaction
      x-tags:
        - Pagamento
      properties:
        id:
          type: number
          description: Identificador da transação
          readOnly: true
        currency_id:
          type: string
          minLength: 1
          description: Identificador de moeda em formato ISO 4217
          example: BRL
          enum:
            - BRL
            - AUD
            - USD
        amount:
          type: number
          description: Valor total pago
          example: 102.98
        quantity:
          type: number
          description: Quantidade compradas do item
          example: 1
        status:
          type: string
          description: Status da transação do cartão
          example: WAITING
        installments:
          type: integer
          description: Quantidade de parcelas
          example: 12
        created_at:
          type: string
          description: Data de criação
          format: date-time
          example: '2021-02-09T00:39:30.000000Z'
          readOnly: true
        updated_at:
          type: string
          description: Data da última atualização
          format: date-time
          example: '2021-02-09T00:39:30.000000Z'
          readOnly: true
        user:
          type: object
          description: Usuário vinculado
          properties:
            data:
              $ref: '#/components/schemas/User'
        item:
          type: object
          description: Itens consumidos na transação
          properties:
            data:
              $ref: '#/components/schemas/Item'
        payment:
          type: object
          description: Dados do pagamento da transação
          properties:
            data:
              $ref: '#/components/schemas/Payment'
        card:
          type: object
          description: 'Cartão usado na transação '
          properties:
            data:
              $ref: '#/components/schemas/Card'
        payer:
          type: object
          description: Pagador da transação
          properties:
            data:
              $ref: '#/components/schemas/Payer'
    Payer:
      description: |-
        Modelo do Pagador

        Possíveis inclusões do modelo: `payment, user`
      type: object
      x-tags:
        - Pagamento
      title: Payer
      properties:
        id:
          type: number
          description: Identificador do Pagador
          example: 1
        external_id:
          type: number
          description: Identificador externo do pagador
          example: 192528586
        type:
          type: string
          minLength: 1
          description: Tipo pagador
          example: registered
        name:
          description: Nome do pagador
        surname:
          description: Sobrenome do pagador
        first_name:
          type: string
          minLength: 1
          description: Primeiro nome do pagador
          example: Test
        last_name:
          type: string
          minLength: 1
          description: Último nome do pagador
          example: Test
        email:
          type: string
          minLength: 1
          description: Email do pagador
          example: test_user_80507629@testuser.com
        date_created:
          type: string
          format: date-time
          description: Data de criação
        phone:
          type: object
          description: Dados do telefone do pagador
          properties:
            number:
              type: string
              minLength: 1
              description: Número do telefone do pagador
              example: 1111-1111
            area_code:
              type: string
              minLength: 1
              description: DDD do telefone
              example: '01'
            extension:
              type: string
              description: Campo extra para mais detalhes
          required:
            - number
            - area_code
            - extension
        identification:
          type: object
          description: Dados do documento do pagador
          properties:
            type:
              type: string
              minLength: 1
              description: Tipo de documento
              enum:
                - CPF
                - DNI
              example: DNI
            number:
              type: string
              minLength: 1
              description: Número do documento
              example: '32659430'
          required:
            - type
            - number
        address:
          description: Dados do endereço do pagador
          type: object
        created_at:
          type: string
          description: Data de criação
          format: date-time
          example: '2021-02-09T00:39:30.000000Z'
          readOnly: true
        updated_at:
          type: string
          description: Data da última atualização
          format: date-time
          example: '2021-02-09T00:39:30.000000Z'
          readOnly: true
        payment:
          type: object
          description: Pagamento relacionado
          properties:
            data:
              $ref: '#/components/schemas/Payment'
        user:
          type: object
          description: Usuário relacionado
          properties:
            data:
              $ref: '#/components/schemas/User'
    ModelCard:
      description: |-
        Modelo de "Modelo" de cartão

        Possíveis inclusões do modelo: `styles, body, bodys, colors`
      type: object
      title: ModelCard
      x-examples: {}
      properties:
        id:
          type: number
          description: Identificador único do modelo
          readOnly: true
        name:
          type: string
          minLength: 1
          example: 'Força, Foco e Fé'
          description: Nome do modelo
        background:
          type: string
          minLength: 1
          description: URL da imagem de fundo
          format: uri
          example: 'http://image.com/example.jpg'
        created_at:
          type: string
          format: date-time
          example: '2021-02-17T18:39:08.000000Z'
          description: Data de criação
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2021-02-17T18:39:08.000000Z'
          description: Data da última atualização
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          example: '2021-02-17T18:39:08.000000Z'
          description: Data de inativação
          readOnly: true
        body:
          type: object
          description: Corpo html/txt do modelo
          properties:
            data:
              $ref: '#/components/schemas/DataCard'
          readOnly: true
        colors:
          type: object
          description: Listagem das cores do modelo
          properties:
            data:
              type: array
              description: Listagem dos dados
              items:
                $ref: '#/components/schemas/ColorCard'
              readOnly: true
          readOnly: true
        styles:
          type: object
          description: Estilos do modelo
          properties:
            data:
              type: array
              description: Listagem dos dados
              items:
                $ref: '#/components/schemas/StyleCard'
              readOnly: true
          readOnly: true
    Card:
      description: |-
        Modelo do Cartão

        Possíveis inclusões do modelo: `payment, user`
      type: object
      title: Card
      properties:
        id:
          type: number
          description: Identificador único do Cartão
          example: 14
        external_id:
          description: Identificador externo do cartão
        customer_id:
          description: Usuário relacionado ao cartão
        expiration_month:
          type: integer
          description: Data de expiração do cartão
          example: 11
        expiration_year:
          type: integer
          description: Ano de expiração do cartão
          example: 2025
        first_six_digits:
          type: string
          minLength: 1
          description: Primeiros 6 dígitos do cartão
          example: '503143'
        last_four_digits:
          type: string
          minLength: 1
          description: Ultimos 4 digitos do cartão
          example: '6351'
        payment_method:
          description: Método de pagamento
        security_code:
          description: Código de segurança
        issuer: {}
        cardholder:
          type: object
          description: Dono do cartão
          properties:
            name:
              type: string
              minLength: 1
              description: Nome do dono do cartão
              example: Jozaozito Fonstes
            identification:
              type: object
              description: Documentos do dono do cartão
              properties:
                type:
                  type: string
                  minLength: 1
                  description: Tipo de documento
                  enum:
                    - CPF
                  example: CPF
                number:
                  type: string
                  minLength: 1
                  description: Número do documento
                  example: '48989553040'
        date_created:
          type: string
          minLength: 1
          description: Data de criação
          format: date-time
          example: '2021-02-08T20:39:28.000000Z'
        date_last_updated:
          type: string
          minLength: 1
          description: Data da última alteração
          format: date-time
          example: '2021-02-08T20:39:28.000000Z'
        last: {}
        error: {}
        pagination_params: {}
        empty: {}
        created_at:
          type: string
          description: Data de criação
          format: date-time
          example: '2021-02-09T00:39:30.000000Z'
          readOnly: true
        updated_at:
          type: string
          description: Identificador do usuário
          format: date-time
          example: '2021-02-09T00:39:30.000000Z'
          readOnly: true
        payment:
          type: object
          description: Pagamento relacionado
          properties:
            data:
              $ref: '#/components/schemas/Payment'
        user:
          type: object
          description: Usuário associado
          properties:
            data:
              $ref: '#/components/schemas/User'
    ColorCard:
      description: |-
        Modelo de cores

        Possíveis inclusões do modelo: `models`
      type: object
      title: ColorCard
      properties:
        id:
          type: number
          description: Identificador único da cor
          readOnly: true
        name:
          type: string
          minLength: 1
          description: Nome da cor
          example: Verão
        matrix:
          type: string
          minLength: 1
          description: Hexadecimal color ou RGB(a)
          example: '#FFFFFF'
        created_at:
          type: string
          description: Data de criação
          example: '2021-02-16T20:32:53.000000Z'
          format: date-time
          readOnly: true
        updated_at:
          type: string
          description: Data da última atualização
          format: date-time
          example: '2021-02-16T20:32:53.000000Z'
          readOnly: true
        deleted_at:
          type: string
          description: Data de inativação
          format: date-time
          example: '2021-02-16T20:32:53.000000Z'
          readOnly: true
        models:
          type: object
          description: Listagem de regras de modelos
          properties:
            data:
              type: array
              description: Listagem dos dados
              items:
                $ref: '#/components/schemas/ModelCard'
    DataCard:
      description: Modelo de dados do cartão
      type: object
      properties:
        id:
          type: number
          description: Identificador único do body
          example: 1
          readOnly: true
        data:
          type: string
          minLength: 1
          description: Template em html/txt
          example: <html><head><title>Hello World</title></head><body>Hello World!</body></html>
        created_at:
          type: string
          description: Data de criação
          format: date-time
          example: '2021-02-17T18:39:08.000000Z'
          readOnly: true
        updated_at:
          type: string
          description: Data da última atualização
          example: '2021-02-17T18:39:08.000000Z'
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          description: Data de inativação
          format: date-time
          example: '2021-02-17T18:39:08.000000Z'
          readOnly: true
      title: DataCard
    NPSResult:
      description: Modelo de relatório de nps
      type: object
      title: NPSResult
      x-examples:
        Exemplo de modelo:
          metric: PROMOTERS
          total: 1
          entity: NOT_RELATION
          entityId: 1
      properties:
        metric:
          type: string
          minLength: 1
          description: Tipo da métrica
          enum:
            - DETRACTORS
            - LIABILITIES
            - PROMOTERS
          example: PROMOTERS
          readOnly: true
        total:
          type: number
          description: Contagem da métrica
          example: 1
          readOnly: true
        entity:
          type: string
          minLength: 1
          description: entidade relacionada
          example: NOT_RELATION
          readOnly: true
        entityId:
          type: integer
          description: Identificador único da entidade relacionada
          example: 12
          exclusiveMinimum: false
          default: 'null'
          readOnly: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  examples: {}
  parameters:
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        example: 1
      description: Especificação da página que será carregada na paginação
tags:
  - name: Autenticação
  - name: Conta de usuário
  - name: Usuário - Administração
  - name: Usuário
  - name: Recuperação de senha
  - name: Cartão - Administração
  - name: Itens
  - name: Pagamento
  - name: Cores
  - name: Estilos
  - name: Modelos
  - name: NPS
security:
  - bearerAuth: []
